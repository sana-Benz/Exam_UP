import React, {useEffect, useState} from 'react'
import HeaderExaminateur from "../components/HeaderExaminateur.jsx"
import Table from "react-bootstrap/Table";
import AddParticipant from '../components/AddParticipant.jsx';
import { useParams} from 'react-router-dom';
import { Container, Button } from "react-bootstrap";


const ParticipantsList = () => {
  const { id } = useParams();
  
  const [participants, setParticipants] = useState([]);

  // NB ici seul le get fonctionne les requetes create et delete ne fonctionnent pas à cause d'une contrainte de clés

  //fonction qui va chercher les participants à cet examen déjà dans la bdd
  //fonctionne
  const getParticipants = async () => {
    try {
      const response = await fetch(`http://localhost:3001/participants/${id}`);
      const jasonData = await response.json(); 
      setParticipants(jasonData);
    } catch (err) {
      console.error(err.message);
    }
  };
  useEffect(() => {
    getParticipants(); 
  }, []);


  //supprimer un participant de la liste
  //ne fonctionne pas
  const deleteParticipant = async (id) => {
    try {
      await fetch(`http://localhost:3001/participants/:id_examine/${id}`, {
        method: "DELETE"
      });
  
      // recharger la liste de participant après suppression
      const response = await fetch(`http://localhost:3001/participants/${id}`);
      const data = await response.json();
      setParticipants(data);

      setParticipants(participants.filter(participant => participant.id !== id));
    } catch (err) {
      console.error(err.message);
    }
  }


  return (
    
      <div className="pageContainer">

      <HeaderExaminateur/>

      <Container fluid className="contentContainer" style={{ backgroundColor: "rgba(142, 202, 230, 0.34)", minHeight: "100vh", padding: '20px 0' }}>
        <AddParticipant />
        <Table striped bordered hover className="table mt-5 ">
          <thead>
            <tr>
              <th>Id examiné</th>
              <th>Nom</th>
              <th>Prénom</th>
              <th>  </th>
            </tr>
          </thead>
          <tbody>
            {Array.isArray(participants) && participants.map((participant) => (
              <tr key={participant.id}>
                <td>{participant.id}</td>
                <td>{participant.nom}</td>
                <td>{participant.prenom}</td>
                <td>
                  <Button variant="outline-danger" onClick={() => deleteParticipant(participant.id)}>Supprimer</Button>
                </td>
              </tr>
            ))}
          </tbody>
        </Table>
      </Container>
      </div>
  );
}

export default ParticipantsList
