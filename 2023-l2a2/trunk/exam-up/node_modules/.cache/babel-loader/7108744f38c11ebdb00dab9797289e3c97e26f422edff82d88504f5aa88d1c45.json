{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanab\\\\OneDrive\\\\Bureau\\\\PROJECT\\\\2023-l2a2\\\\trunk\\\\exam-up\\\\src\\\\assests\\\\Pages\\\\ExamPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport HeaderExamine from \"../components/HeaderExamine\";\nimport { Container, Button } from \"react-bootstrap\";\nimport Examen from \"../components/Examen\";\nimport \"./style/ExamPage.css\";\nimport { useParams } from \"react-router-dom\";\nimport NavbarProfil from \"../components/NavbarProfil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamPage = () => {\n  _s();\n  const {\n    id,\n    id_examen,\n    duree\n  } = useParams();\n  const [nom, setNom] = useState('');\n  const [prenom, setPrenom] = useState('');\n  const [timer, setTimer] = useState(parseInt(duree) * 60);\n  const intervalRef = useRef(null);\n  const [examenSoumis, setExamenSoumis] = useState(false);\n  const submitExam = () => {\n    console.log(\"bouton soumettre clické\");\n    setExamenSoumis(true);\n  };\n\n  //get donnees utilisateur\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/utilisateur/${id}`);\n        if (!response.ok) {\n          throw new Error('Erreur de réseau ou réponse non valide');\n        }\n        const data = await response.json();\n        setNom(data.nom);\n        setPrenom(data.prenom);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des données de l'utilisateur\", error);\n      }\n    };\n    if (id) {\n      fetchUserData();\n    }\n  }, [id]);\n  const urlLogo = `/Profile_examine/${id}`;\n  const containertable = {\n    width: '100%'\n  };\n  useEffect(() => {\n    const countdown = () => {\n      setTimer(prevTimer => {\n        if (prevTimer > 0) {\n          return prevTimer - 1;\n        } else {\n          clearInterval(intervalRef.current);\n          return 0;\n        }\n      });\n    };\n    intervalRef.current = setInterval(countdown, 1000);\n    return () => clearInterval(intervalRef.current);\n  }, []);\n  useEffect(() => {\n    const storedTimer = localStorage.getItem('timer examen');\n    if (storedTimer) {\n      setTimer(parseInt(storedTimer));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('timer examen', timer.toString());\n  }, [timer]);\n  const formatTime = seconds => {\n    const heures = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secondesRestantes = seconds % 60;\n    return `${heures}:${String(minutes).padStart(2, \"0\")}:${String(secondesRestantes).padStart(2, \"0\")}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavbarProfil, {\n      nom: nom,\n      prenom: prenom,\n      homePageURL: urlLogo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"rgba(142, 202, 230, 0.34)\",\n        minHeight: \"100vh\",\n        padding: \"20px 0\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sticky_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: formatTime(timer)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 60\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: submitExam,\n          children: \"Finir et soumettre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        className: \"contentContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Questions\",\n          children: /*#__PURE__*/_jsxDEV(Examen, {\n            id_examen: id_examen,\n            examenSoumis: submitExam\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamPage, \"WIAo0Kga+U6Pe2MXipCu4lnYWdQ=\", false, function () {\n  return [useParams];\n});\n_c = ExamPage;\nexport default ExamPage;\nvar _c;\n$RefreshReg$(_c, \"ExamPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","HeaderExamine","Container","Button","Examen","useParams","NavbarProfil","jsxDEV","_jsxDEV","ExamPage","_s","id","id_examen","duree","nom","setNom","prenom","setPrenom","timer","setTimer","parseInt","intervalRef","examenSoumis","setExamenSoumis","submitExam","console","log","fetchUserData","response","fetch","ok","Error","data","json","error","urlLogo","containertable","width","countdown","prevTimer","clearInterval","current","setInterval","storedTimer","localStorage","getItem","setItem","toString","formatTime","seconds","heures","Math","floor","minutes","secondesRestantes","String","padStart","children","homePageURL","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","minHeight","padding","className","variant","onClick","fluid","_c","$RefreshReg$"],"sources":["C:/Users/sanab/OneDrive/Bureau/PROJECT/2023-l2a2/trunk/exam-up/src/assests/Pages/ExamPage.jsx"],"sourcesContent":["import React, { useState, useEffect,useRef } from \"react\";\r\nimport HeaderExamine from \"../components/HeaderExamine\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport Examen from \"../components/Examen\";\r\nimport \"./style/ExamPage.css\";\r\nimport { useParams} from \"react-router-dom\";\r\nimport NavbarProfil from \"../components/NavbarProfil\";\r\n\r\nconst ExamPage = () => {\r\n  const { id,id_examen, duree } = useParams();\r\n  const [nom, setNom] = useState('');\r\n  const [prenom, setPrenom] = useState('');\r\n  \r\n  const [timer, setTimer] = useState(parseInt(duree) * 60);\r\n  const intervalRef = useRef(null);\r\n  const [examenSoumis, setExamenSoumis] = useState(false);\r\n\r\n  const submitExam = () => {\r\n    console.log(\"bouton soumettre clické\");\r\n    setExamenSoumis(true);\r\n  };\r\n\r\n    //get donnees utilisateur\r\n    useEffect(() => {\r\n        const fetchUserData = async () => {\r\n          try {\r\n            const response = await fetch(`http://localhost:3001/utilisateur/${id}`);\r\n            if (!response.ok) {\r\n              throw new Error('Erreur de réseau ou réponse non valide');\r\n            }\r\n            const data = await response.json();\r\n            setNom(data.nom);\r\n            setPrenom(data.prenom);\r\n          } catch (error) {\r\n            console.error(\"Erreur lors de la récupération des données de l'utilisateur\", error);\r\n          }\r\n        };\r\n        if (id) {\r\n          fetchUserData();\r\n        }\r\n      }, [id]);\r\n\r\n      const urlLogo =`/Profile_examine/${id}`;\r\n\r\n     const containertable ={\r\n      width : '100%',\r\n     };\r\n\r\n  useEffect(() => {\r\n    const countdown = () => {\r\n      setTimer((prevTimer) => {\r\n        if (prevTimer > 0) {\r\n          return prevTimer - 1;\r\n        } else {\r\n          clearInterval(intervalRef.current);  \r\n          return 0;\r\n        }\r\n      });\r\n    };\r\n    intervalRef.current = setInterval(countdown, 1000);  \r\n    return () => clearInterval(intervalRef.current);  \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const storedTimer = localStorage.getItem('timer examen');\r\n    if (storedTimer) {\r\n      setTimer(parseInt(storedTimer));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('timer examen', timer.toString());\r\n  }, [timer]);\r\n\r\n  const formatTime = (seconds) => {\r\n    const heures = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const secondesRestantes = seconds % 60;\r\n    return `${heures}:${String(minutes).padStart(2, \"0\")}:${String(secondesRestantes).padStart(2, \"0\")}`;\r\n  };\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <NavbarProfil nom={nom} prenom={prenom} homePageURL={urlLogo} />\r\n\r\n      <div\r\n        style={{\r\n          backgroundColor: \"rgba(142, 202, 230, 0.34)\",\r\n          minHeight: \"100vh\",\r\n          padding: \"20px 0\",\r\n        }}\r\n      >\r\n        <div className=\"sticky_container\">\r\n          <div className=\"timer\">{formatTime(timer)}</div> <br />  \r\n          <Button variant=\"danger\"  onClick={submitExam}>Finir et soumettre</Button>\r\n        </div>\r\n\r\n        <Container fluid className=\"contentContainer\">\r\n          <div className=\"Questions\">\r\n            <Examen id_examen={id_examen}  examenSoumis={submitExam}/>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}