{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanab\\\\OneDrive\\\\Bureau\\\\PROJECT\\\\2023-l2a2\\\\trunk\\\\exam-up\\\\src\\\\assests\\\\components\\\\AddParticipant.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddParticipant = ({\n  id,\n  id_examen\n}) => {\n  _s();\n  const [IdExamine, setIdExamine] = useState(\"\");\n  const [groupeParticipants, setGroupeParticipants] = useState([]);\n  const [groupe, setGroupe] = useState('');\n\n  //fonction qui va chercher les participants avec le groupe précisé\n  const getGroupeParticipants = async groupe => {\n    try {\n      console.log(\"je suis avant le respsnjnrf\");\n      const response = await fetch(`http://localhost:3001/groupe_participants/${id}/${id_examen}/${groupe}`);\n      const jasonData = await response.json();\n      setGroupeParticipants(jasonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  useEffect(() => {\n    getGroupeParticipants();\n  }, [groupe]);\n  const onAjoutParticipant = async (e, id_examen, id) => {\n    e.preventDefault();\n    console.log('boutton ajouter partcipant clicked');\n    try {\n      const body = {\n        id_examine: IdExamine\n      };\n      const response = await fetch(`http://localhost:3001/participants/${id}/${id_examen}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      window.location = `/Liste_Participants/${id}/${id_examen}`;\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mt-5\",\n        style: {\n          marginTop: \"0\",\n          color: \"#000000\",\n          fontFamily: \"Montserrat\",\n          fontWeight: \"bold\"\n        },\n        children: [\" \", \"Chercher le groupe des participants:\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"d-flex mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: groupe,\n          onChange: e => setGroupe(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info\",\n          onClick: () => getGroupeParticipants(groupe),\n          children: \"Chercher\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        className: \"table mt-5 \",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id examin\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Pr\\xE9nom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Array.isArray(groupeParticipants) && groupeParticipants.map(participant => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: participant.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: participant.nom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: participant.prenom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this)]\n          }, participant.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(AddParticipant, \"6LZxfE6/MLntgXiUKLYxeHhTKf0=\");\n_c = AddParticipant;\nexport default AddParticipant;\nvar _c;\n$RefreshReg$(_c, \"AddParticipant\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","AddParticipant","id","id_examen","_s","IdExamine","setIdExamine","groupeParticipants","setGroupeParticipants","groupe","setGroupe","getGroupeParticipants","console","log","response","fetch","jasonData","json","err","error","message","onAjoutParticipant","e","preventDefault","body","id_examine","method","headers","JSON","stringify","window","location","children","className","style","marginTop","color","fontFamily","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onClick","striped","bordered","hover","Array","isArray","map","participant","nom","prenom","_c","$RefreshReg$"],"sources":["C:/Users/sanab/OneDrive/Bureau/PROJECT/2023-l2a2/trunk/exam-up/src/assests/components/AddParticipant.jsx"],"sourcesContent":["import React, { useState , useEffect} from \"react\";\r\nimport {Table, Button} from \"react-bootstrap\";\r\n\r\nconst AddParticipant = ({id,id_examen}) => {\r\n  const [IdExamine, setIdExamine] = useState(\"\");\r\n  const[groupeParticipants, setGroupeParticipants ] = useState([]);\r\n  const[groupe, setGroupe]=useState('');\r\n\r\n  //fonction qui va chercher les participants avec le groupe précisé\r\n  const getGroupeParticipants = async (groupe) => {\r\n    try {\r\n      console.log(\"je suis avant le respsnjnrf\");\r\n      const response = await fetch(`http://localhost:3001/groupe_participants/${id}/${id_examen}/${groupe}`);\r\n      const jasonData = await response.json(); \r\n      setGroupeParticipants(jasonData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getGroupeParticipants(); \r\n  }, [groupe]);\r\n\r\n\r\n\r\n  const onAjoutParticipant = async (e, id_examen, id) => {\r\n    e.preventDefault();\r\n    console.log('boutton ajouter partcipant clicked');\r\n    try {\r\n      const body = { id_examine: IdExamine };\r\n      const response = await fetch(\r\n        `http://localhost:3001/participants/${id}/${id_examen}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body), \r\n        }\r\n      );\r\n      window.location = `/Liste_Participants/${id}/${id_examen}`;\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1 className=\"text-center mt-5\" style={{\r\n              marginTop: \"0\",\r\n              color: \"#000000\",\r\n              fontFamily: \"Montserrat\",\r\n              fontWeight: \"bold\",\r\n            }}>\r\n          {\" \"}\r\n          Chercher le groupe des participants:\r\n          {\" \"}\r\n        </h1>\r\n        <form className=\"d-flex mt-5\" >\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={groupe}\r\n            onChange={(e) => setGroupe(e.target.value)}\r\n          />\r\n          <button type=\"button\" className=\"btn btn-info\" onClick={() => getGroupeParticipants(groupe)}>\r\n            Chercher\r\n          </button>\r\n        </form>\r\n        {\" \"}\r\n        \r\n        <Table striped bordered hover className=\"table mt-5 \">\r\n              <thead>\r\n                <tr>\r\n                  <th>Id examiné</th>\r\n                  <th>Nom</th>\r\n                  <th>Prénom</th>\r\n            \r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {Array.isArray(groupeParticipants) && groupeParticipants.map((participant) => (\r\n                  <tr key={participant.id}>\r\n                    <td>{participant.id}</td>\r\n                    <td>{participant.nom}</td>\r\n                    <td>{participant.prenom}</td>\r\n                \r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddParticipant;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}