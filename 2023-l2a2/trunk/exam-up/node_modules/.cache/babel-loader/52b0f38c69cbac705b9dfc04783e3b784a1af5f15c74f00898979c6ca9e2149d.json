{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanab\\\\OneDrive\\\\Bureau\\\\PROJECT\\\\2023-l2a2\\\\trunk\\\\exam-up\\\\src\\\\assests\\\\Pages\\\\AjouterQ.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport NavbarProfil from \"../components/NavbarProfil\";\nimport { Container } from \"react-bootstrap\";\nimport ReponseCreation from \"../components/ReponseCreation\";\nimport QuestionCreation from \"../components/QuestionCreation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AjouterQ = () => {\n  _s();\n  const [nom, setNom] = useState('');\n  const [prenom, setPrenom] = useState('');\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/utilisateur/${id}`);\n        if (!response.ok) {\n          throw new Error('Erreur de réseau ou réponse non valide');\n        }\n        const data = await response.json();\n        setNom(data.nom);\n        setPrenom(data.prenom);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des données de l'utilisateur\", error);\n      }\n    };\n    if (id) {\n      fetchUserData();\n    }\n  }, [id]);\n  const urlLogo = `/profile-examinateur/${id}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavbarProfil, {\n      nom: nom,\n      prenom: prenom,\n      homePageURL: urlLogo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"contentContainer\",\n      style: {\n        backgroundColor: 'rgba(142, 202, 230, 0.34)',\n        minHeight: '100vh',\n        padding: '20px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(AjouterQ, \"udPqpPCl+QWy8hPLDeI8o/6aqGU=\", false, function () {\n  return [useParams];\n});\n_c = AjouterQ;\nexport default AjouterQ;\nvar _c;\n$RefreshReg$(_c, \"AjouterQ\");","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","NavbarProfil","Container","ReponseCreation","QuestionCreation","jsxDEV","_jsxDEV","AjouterQ","_s","nom","setNom","prenom","setPrenom","id","fetchUserData","response","fetch","ok","Error","data","json","error","console","urlLogo","children","homePageURL","fileName","_jsxFileName","lineNumber","columnNumber","fluid","className","style","backgroundColor","minHeight","padding","_c","$RefreshReg$"],"sources":["C:/Users/sanab/OneDrive/Bureau/PROJECT/2023-l2a2/trunk/exam-up/src/assests/Pages/AjouterQ.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport NavbarProfil from \"../components/NavbarProfil\";\r\nimport {Container } from \"react-bootstrap\";\r\nimport ReponseCreation from \"../components/ReponseCreation\";\r\nimport QuestionCreation from \"../components/QuestionCreation\";\r\n\r\nconst AjouterQ = () => {\r\n    const [nom, setNom] = useState('');\r\n    const [prenom, setPrenom] = useState('');\r\n    const { id }= useParams(); \r\n\r\n    useEffect(() => {\r\n        const fetchUserData = async () => {\r\n          try {\r\n            const response = await fetch(`http://localhost:3001/utilisateur/${id}`);\r\n            if (!response.ok) {\r\n              throw new Error('Erreur de réseau ou réponse non valide');\r\n            }\r\n            const data = await response.json();\r\n            setNom(data.nom);\r\n            setPrenom(data.prenom);\r\n          } catch (error) {\r\n            console.error(\"Erreur lors de la récupération des données de l'utilisateur\", error);\r\n          }\r\n        };\r\n    \r\n        if (id) {\r\n          fetchUserData();\r\n        }\r\n      }, [id]);\r\n\r\n     const urlLogo =`/profile-examinateur/${id}`;\r\n\r\n  return (\r\n    <div>\r\n      <NavbarProfil nom={nom} prenom={prenom} homePageURL={urlLogo} />\r\n        <Container fluid className=\"contentContainer\" style={{ backgroundColor: 'rgba(142, 202, 230, 0.34)', \r\n        minHeight: '100vh' , padding: '20px 0' }}>\r\n\r\n\r\n\r\n\r\n        </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AjouterQ\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAAQC,SAAS,QAAQ,iBAAiB;AAC1C,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,gBAAgB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM;IAAEe;EAAG,CAAC,GAAEb,SAAS,CAAC,CAAC;EAEzBH,SAAS,CAAC,MAAM;IACZ,MAAMiB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCH,EAAG,EAAC,CAAC;QACvE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;QAC3D;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCV,MAAM,CAACS,IAAI,CAACV,GAAG,CAAC;QAChBG,SAAS,CAACO,IAAI,CAACR,MAAM,CAAC;MACxB,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6DAA6D,EAAEA,KAAK,CAAC;MACrF;IACF,CAAC;IAED,IAAIR,EAAE,EAAE;MACNC,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACD,EAAE,CAAC,CAAC;EAET,MAAMU,OAAO,GAAG,wBAAuBV,EAAG,EAAC;EAE9C,oBACEP,OAAA;IAAAkB,QAAA,gBACElB,OAAA,CAACL,YAAY;MAACQ,GAAG,EAAEA,GAAI;MAACE,MAAM,EAAEA,MAAO;MAACc,WAAW,EAAEF;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9DvB,OAAA,CAACJ,SAAS;MAAC4B,KAAK;MAACC,SAAS,EAAC,kBAAkB;MAACC,KAAK,EAAE;QAAEC,eAAe,EAAE,2BAA2B;QACnGC,SAAS,EAAE,OAAO;QAAGC,OAAO,EAAE;MAAS;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAK9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;AAAArB,EAAA,CAvCKD,QAAQ;EAAA,QAGIP,SAAS;AAAA;AAAAoC,EAAA,GAHrB7B,QAAQ;AAyCd,eAAeA,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}