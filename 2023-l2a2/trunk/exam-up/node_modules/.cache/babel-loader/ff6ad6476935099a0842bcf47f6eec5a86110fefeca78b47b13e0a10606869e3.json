{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanab\\\\OneDrive\\\\Bureau\\\\PROJECT\\\\2023-l2a2\\\\trunk\\\\exam-up\\\\src\\\\assests\\\\components\\\\QuestionExamen.jsx\",\n  _s = $RefreshSig$();\n// QuestionExamen.js\nimport React, { useState, useEffect } from \"react\";\nimport OptRepList from \"./OptRepList\";\nimport \"../Pages/style/QuestionExamen.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionExamen = ({\n  id_question,\n  id_examen,\n  indice,\n  etat,\n  onUpdateResponse\n}) => {\n  _s();\n  const [questionInfo, setQuestionInfo] = useState({});\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const handleUpdateResponse = (questionId, selectedOptions) => {\n    setSelectedOptions(prevState => {\n      const updatedOptions = [...prevState];\n      const index = updatedOptions.findIndex(option => option.id_question === questionId);\n      if (index !== -1) {\n        updatedOptions[index] = {\n          id_question: questionId,\n          options: selectedOptions\n        };\n      } else {\n        updatedOptions.push({\n          id_question: questionId,\n          options: selectedOptions\n        });\n      }\n      return updatedOptions;\n    });\n  };\n  useEffect(() => {\n    const getQuestion = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/question/${id_question}`);\n        const jsonData = await response.json();\n        if (Array.isArray(jsonData) && jsonData.length > 0) {\n          setQuestionInfo(jsonData[0]);\n        } else {\n          console.error(\"No question data returned from the API\");\n        }\n      } catch (err) {\n        console.error(err.message);\n      }\n    };\n    getQuestion();\n  }, [id_question]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Big_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Horizontal_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Question_container\",\n        children: [\"Question \", indice + 1, \": \", questionInfo.texte]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Points_container\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", questionInfo.nb_points, \" point(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(OptRepList, {\n        id_question: id_question,\n        type_question: questionInfo.type,\n        id_examen: id_examen,\n        etat: etat,\n        onUpdateResponse: onUpdateResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionExamen, \"GAq4t4hl8sELqAUzqVVpG20KMiw=\");\n_c = QuestionExamen;\nexport default QuestionExamen;\nvar _c;\n$RefreshReg$(_c, \"QuestionExamen\");","map":{"version":3,"names":["React","useState","useEffect","OptRepList","jsxDEV","_jsxDEV","QuestionExamen","id_question","id_examen","indice","etat","onUpdateResponse","_s","questionInfo","setQuestionInfo","selectedOptions","setSelectedOptions","handleUpdateResponse","questionId","prevState","updatedOptions","index","findIndex","option","options","push","getQuestion","response","fetch","jsonData","json","Array","isArray","length","console","error","err","message","className","children","texte","fileName","_jsxFileName","lineNumber","columnNumber","nb_points","type_question","type","_c","$RefreshReg$"],"sources":["C:/Users/sanab/OneDrive/Bureau/PROJECT/2023-l2a2/trunk/exam-up/src/assests/components/QuestionExamen.jsx"],"sourcesContent":["// QuestionExamen.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport OptRepList from \"./OptRepList\";\r\nimport \"../Pages/style/QuestionExamen.css\";\r\n\r\nconst QuestionExamen = ({ id_question, id_examen, indice, etat, onUpdateResponse }) => {\r\n  const [questionInfo, setQuestionInfo] = useState({});\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n\r\n  const handleUpdateResponse = (questionId, selectedOptions) => {\r\n    setSelectedOptions(prevState => {\r\n      const updatedOptions = [...prevState];\r\n      const index = updatedOptions.findIndex(option => option.id_question === questionId);\r\n      if (index !== -1) {\r\n        updatedOptions[index] = { id_question: questionId, options: selectedOptions };\r\n      } else {\r\n        updatedOptions.push({ id_question: questionId, options: selectedOptions });\r\n      }\r\n      return updatedOptions;\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    const getQuestion = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:3001/question/${id_question}`\r\n        );\r\n        const jsonData = await response.json();\r\n        if (Array.isArray(jsonData) && jsonData.length > 0) {\r\n          setQuestionInfo(jsonData[0]);\r\n        } else {\r\n          console.error(\"No question data returned from the API\");\r\n        }\r\n      } catch (err) {\r\n        console.error(err.message);\r\n      }\r\n    };\r\n    getQuestion();\r\n  }, [id_question]);\r\n\r\n  return (\r\n    <div className=\"Big_container\">\r\n      <div className=\"Horizontal_container\">\r\n        <div className=\"Question_container\">\r\n          Question {indice + 1}: {questionInfo.texte}\r\n        </div>\r\n        <div className=\"Points_container\">\r\n          <span> {questionInfo.nb_points} point(s)</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <OptRepList\r\n          id_question={id_question}\r\n          type_question={questionInfo.type}\r\n          id_examen={id_examen}\r\n          etat={etat}\r\n          onUpdateResponse={onUpdateResponse}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionExamen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}