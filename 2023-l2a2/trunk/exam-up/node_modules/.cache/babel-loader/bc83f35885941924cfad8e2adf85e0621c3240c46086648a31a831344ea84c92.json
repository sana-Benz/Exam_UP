{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanab\\\\OneDrive\\\\Bureau\\\\PROJECT\\\\2023-l2a2\\\\trunk\\\\exam-up\\\\src\\\\assests\\\\components\\\\OptRepList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../Pages/style/OptRepList.css\";\nimport { useParams } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form';\n\n//ce composant est utilisé pour l'examen que l'examiné va passer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OptRepList = ({\n  id_question,\n  type_question,\n  etat,\n  id_examen\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  // liste de réponses possibles pour une question\n  const [ArrayReponses, setArrayReponses] = useState([]);\n\n  // liste des ids des réponses de l'examine\n  const [idReponses, setIdReponses] = useState([]);\n  useEffect(() => {\n    const storedIdReponses = localStorage.getItem('idReponses');\n    if (storedIdReponses) {\n      const parsedIdReponses = JSON.parse(storedIdReponses);\n      if (Array.isArray(parsedIdReponses)) {\n        setIdReponses(parsedIdReponses);\n      } else {\n        console.error(\"Stored idReponses n'est pas un tableau\", parsedIdReponses);\n      }\n    }\n  }, []);\n\n  //fonction qui va chercher la liste des opt de rép de la bdd à partir de l'id de la question\n  useEffect(() => {\n    const getOptRep = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/reponses_possibles/${id_question}`);\n        const jasonData = await response.json();\n        if (Array.isArray(jasonData)) {\n          setArrayReponses(jasonData);\n        } else {\n          console.error(\"Pas de réponse de l'API\");\n        }\n      } catch (err) {\n        console.error(err.message);\n      }\n    };\n    getOptRep();\n  }, [id_question]);\n  const handleExamineAnswers = answerId => {\n    setIdReponses(prevIdReponses => {\n      const newIdReponses = type_question === 'QCM' ? prevIdReponses.some(item => item.id_option === answerId) ? prevIdReponses.filter(item => item.id_option !== answerId) : [...prevIdReponses, {\n        id_question,\n        id_option: answerId\n      }] : [{\n        id_question,\n        id_option: answerId\n      }];\n      localStorage.setItem('idReponses', JSON.stringify(newIdReponses));\n      console.log('voici les id des réponses cochées ', newIdReponses);\n      return newIdReponses;\n    });\n  };\n  const onSubmitExam = async e => {\n    console.log(typeof idReponses);\n    if (e) {\n      e.preventDefault();\n    }\n    try {\n      const response = await fetch(`http://localhost:3001/Envoyer_reponses_examine/${id}/${id_examen}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          idReponses\n        })\n      });\n      console.log('j attends la reponse');\n      await response.json();\n      console.log('je suis apres la reponse');\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  if (etat) {\n    onSubmitExam();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Big_Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"consigne\",\n      children: \"Veuillez choisir la ou les r\\xE9ponse(s) correcte(s) :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Smaller_Container\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: ArrayReponses.map(reponse => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"response_container\",\n          children: type_question === 'QCM' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: reponse.id,\n              value: reponse.texte,\n              className: \"reponse\",\n              onChange: () => handleExamineAnswers(reponse.id),\n              checked: idReponses.some(item => item.id_option === reponse.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: reponse.id,\n              children: reponse.texte\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: reponse.id,\n              name: \"reponse\",\n              value: reponse.texte,\n              className: \"reponseA\",\n              onChange: () => handleExamineAnswers(reponse.id),\n              checked: idReponses.some(item => item.id_option === reponse.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: reponse.id,\n              children: reponse.texte\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)\n        }, reponse.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(OptRepList, \"bI8u5Hq+D0WCT0V9PpezQ6LpZ9o=\", false, function () {\n  return [useParams];\n});\n_c = OptRepList;\nexport default OptRepList;\nvar _c;\n$RefreshReg$(_c, \"OptRepList\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Form","jsxDEV","_jsxDEV","OptRepList","id_question","type_question","etat","id_examen","_s","id","ArrayReponses","setArrayReponses","idReponses","setIdReponses","storedIdReponses","localStorage","getItem","parsedIdReponses","JSON","parse","Array","isArray","console","error","getOptRep","response","fetch","jasonData","json","err","message","handleExamineAnswers","answerId","prevIdReponses","newIdReponses","some","item","id_option","filter","setItem","stringify","log","onSubmitExam","e","preventDefault","method","headers","body","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","reponse","type","value","texte","onChange","checked","htmlFor","name","_c","$RefreshReg$"],"sources":["C:/Users/sanab/OneDrive/Bureau/PROJECT/2023-l2a2/trunk/exam-up/src/assests/components/OptRepList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../Pages/style/OptRepList.css\";\r\nimport { useParams} from \"react-router-dom\";\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n//ce composant est utilisé pour l'examen que l'examiné va passer\r\nconst OptRepList = ({id_question , type_question , etat ,id_examen}) => {\r\n  const { id } = useParams();\r\n  // liste de réponses possibles pour une question\r\n  const [ArrayReponses, setArrayReponses] = useState([]);\r\n\r\n  // liste des ids des réponses de l'examine\r\n  const [idReponses, setIdReponses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const storedIdReponses = localStorage.getItem('idReponses');\r\n    if (storedIdReponses) {\r\n        const parsedIdReponses = JSON.parse(storedIdReponses);\r\n        if (Array.isArray(parsedIdReponses)) {\r\n            setIdReponses(parsedIdReponses);\r\n        } else {\r\n            console.error(\"Stored idReponses n'est pas un tableau\", parsedIdReponses);\r\n        }\r\n    }\r\n}, []);\r\n  \r\n  //fonction qui va chercher la liste des opt de rép de la bdd à partir de l'id de la question\r\n  useEffect(() => {\r\n    const getOptRep = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3001/reponses_possibles/${id_question}`);\r\n        const jasonData = await response.json(); \r\n        if (Array.isArray(jasonData)) {\r\n          setArrayReponses(jasonData);\r\n        } else {\r\n          console.error(\"Pas de réponse de l'API\");\r\n        }\r\n      } catch (err) {\r\n        console.error(err.message);\r\n      }\r\n    };\r\n  \r\n    getOptRep(); \r\n  }, [id_question]);\r\n\r\n  const handleExamineAnswers = (answerId) => {\r\n    setIdReponses((prevIdReponses) => {\r\n      const newIdReponses = type_question === 'QCM' ?\r\n        (prevIdReponses.some(item => item.id_option === answerId) ?\r\n          prevIdReponses.filter(item => item.id_option !== answerId) :\r\n          [...prevIdReponses, { id_question, id_option: answerId }]) :\r\n        [{ id_question, id_option: answerId }];\r\n\r\n    \r\n      localStorage.setItem('idReponses', JSON.stringify(newIdReponses));\r\n      console.log('voici les id des réponses cochées ', newIdReponses);\r\n\r\n      return newIdReponses;\r\n    });\r\n  };\r\n    \r\n  const onSubmitExam = async (e) => {\r\n    console.log(typeof idReponses);\r\n    if (e) {\r\n      e.preventDefault();\r\n  }\r\n    try {\r\n      \r\n      const response = await fetch(\r\n        `http://localhost:3001/Envoyer_reponses_examine/${id}/${id_examen}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({idReponses }),\r\n        }\r\n      );\r\n      console.log('j attends la reponse');\r\n      await response.json();\r\n      console.log('je suis apres la reponse');\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  if (etat) {\r\n    onSubmitExam();\r\n  } \r\n\r\n  return (\r\n    <div className=\"Big_Container\">\r\n      <p className=\"consigne\">Veuillez choisir la ou les réponse(s) correcte(s) :</p>\r\n      <div className=\"Smaller_Container\">\r\n        <Form>\r\n          {ArrayReponses.map((reponse) => (\r\n            <div key={reponse.id} className=\"response_container\">\r\n              {type_question === 'QCM' ? (\r\n                <div>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id={reponse.id}\r\n                    value={reponse.texte}\r\n                    className=\"reponse\"\r\n                    onChange={() => handleExamineAnswers(reponse.id)}\r\n                    checked={idReponses.some(item => item.id_option === reponse.id)}\r\n                  />\r\n                  <label htmlFor={reponse.id}>{reponse.texte}</label>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <input\r\n                    type=\"radio\"\r\n                    id={reponse.id}\r\n                    name=\"reponse\"\r\n                    value={reponse.texte}\r\n                    className=\"reponseA\"\r\n                    onChange={() => handleExamineAnswers(reponse.id)}\r\n                    checked={idReponses.some(item => item.id_option === reponse.id)}\r\n                  />\r\n                  <label htmlFor={reponse.id}>{reponse.texte}</label>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default OptRepList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}