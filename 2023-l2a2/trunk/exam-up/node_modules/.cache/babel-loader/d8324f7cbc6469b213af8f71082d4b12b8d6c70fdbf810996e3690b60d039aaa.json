{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanab\\\\OneDrive\\\\Bureau\\\\PROJECT\\\\2023-l2a2\\\\trunk\\\\exam-up\\\\src\\\\assests\\\\components\\\\ModalComponent.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ModalComponent({\n  modalTitle,\n  //titre du modal\n  buttonTitle,\n  //titre du bouton qui déclenche le modal\n  buttonStyle,\n  // variant du bouton bootstrap = couleur, style etc..\n  buttonSize,\n  //accepte les valeurs \"sm\" = petit, \"lg\" = large et undefined = taille par défaut\n  modalBody,\n  //ce qu'il y a à l'intérieur du modal texte, form ..\n  closeText,\n  //texte du bouton fermer, annuler etc..\n  confirmText //texte du bouton confirmer..\n}) {\n  _s();\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: buttonStyle,\n      size: buttonSize,\n      onClick: handleShow,\n      children: buttonTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      backdrop: \"static\",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: modalTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: modalBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: closeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: confirmText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ModalComponent, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n_c = ModalComponent;\nexport default ModalComponent;\nvar _c;\n$RefreshReg$(_c, \"ModalComponent\");","map":{"version":3,"names":["useState","Button","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","ModalComponent","modalTitle","buttonTitle","buttonStyle","buttonSize","modalBody","closeText","confirmText","_s","show","setShow","handleClose","handleShow","children","variant","size","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Footer","_c","$RefreshReg$"],"sources":["C:/Users/sanab/OneDrive/Bureau/PROJECT/2023-l2a2/trunk/exam-up/src/assests/components/ModalComponent.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nfunction ModalComponent({\r\n  modalTitle, //titre du modal\r\n  buttonTitle, //titre du bouton qui déclenche le modal\r\n  buttonStyle, // variant du bouton bootstrap = couleur, style etc..\r\n  buttonSize, //accepte les valeurs \"sm\" = petit, \"lg\" = large et undefined = taille par défaut\r\n  modalBody, //ce qu'il y a à l'intérieur du modal texte, form ..\r\n  closeText, //texte du bouton fermer, annuler etc..\r\n  confirmText, //texte du bouton confirmer..\r\n}) {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button variant={buttonStyle} size={buttonSize} onClick={handleShow}>\r\n        {buttonTitle}\r\n      </Button>\r\n\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{modalBody}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            {closeText}\r\n          </Button>\r\n          <Button variant=\"primary\">{confirmText}</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalComponent;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,cAAcA,CAAC;EACtBC,UAAU;EAAE;EACZC,WAAW;EAAE;EACbC,WAAW;EAAE;EACbC,UAAU;EAAE;EACZC,SAAS;EAAE;EACXC,SAAS;EAAE;EACXC,WAAW,CAAE;AACf,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAMkB,WAAW,GAAGA,CAAA,KAAMD,OAAO,CAAC,KAAK,CAAC;EACxC,MAAME,UAAU,GAAGA,CAAA,KAAMF,OAAO,CAAC,IAAI,CAAC;EAEtC,oBACEb,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACEhB,OAAA,CAACH,MAAM;MAACoB,OAAO,EAAEX,WAAY;MAACY,IAAI,EAAEX,UAAW;MAACY,OAAO,EAAEJ,UAAW;MAAAC,QAAA,EACjEX;IAAW;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAETvB,OAAA,CAACF,KAAK;MACJc,IAAI,EAAEA,IAAK;MACXY,MAAM,EAAEV,WAAY;MACpBW,QAAQ,EAAC,QAAQ;MACjBC,QAAQ,EAAE,KAAM;MAAAV,QAAA,gBAEhBhB,OAAA,CAACF,KAAK,CAAC6B,MAAM;QAACC,WAAW;QAAAZ,QAAA,eACvBhB,OAAA,CAACF,KAAK,CAAC+B,KAAK;UAAAb,QAAA,EAAEZ;QAAU;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACfvB,OAAA,CAACF,KAAK,CAACgC,IAAI;QAAAd,QAAA,EAAER;MAAS;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACpCvB,OAAA,CAACF,KAAK,CAACiC,MAAM;QAAAf,QAAA,gBACXhB,OAAA,CAACH,MAAM;UAACoB,OAAO,EAAC,WAAW;UAACE,OAAO,EAAEL,WAAY;UAAAE,QAAA,EAC9CP;QAAS;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACTvB,OAAA,CAACH,MAAM;UAACoB,OAAO,EAAC,SAAS;UAAAD,QAAA,EAAEN;QAAW;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA,eACR,CAAC;AAEP;AAACZ,EAAA,CAvCQR,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAyCvB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}