{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanab\\\\OneDrive\\\\Bureau\\\\PROJECT\\\\2023-l2a2\\\\trunk\\\\exam-up\\\\src\\\\assests\\\\components\\\\ModalComponent.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\n//modifie\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ModalComponent({\n  modalTitle,\n  //titre du modal\n  buttonTitle,\n  //titre du bouton qui déclenche le modal\n  buttonStyle,\n  // variant du bouton bootstrap = couleur, style etc..\n  buttonSize,\n  //accepte les valeurs \"sm\" = petit, \"lg\" = large et undefined = taille par défaut\n  modalBody,\n  //ce qu'il y a à l'intérieur du modal texte, form ..\n  closeText,\n  //texte du bouton fermer, annuler etc..\n  confirmText,\n  //texte du bouton confirmer..\n  handleConfirm\n}) {\n  _s();\n  const [show, setShow] = useState(false);\n  const handleShow = () => setShow(true);\n  const closeModal = () => {\n    setShow(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: buttonStyle,\n      size: buttonSize,\n      onClick: handleShow,\n      children: buttonTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: closeModal,\n      backdrop: \"static\",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: modalTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: modalBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeModal,\n          children: closeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleConfirm,\n          children: confirmText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ModalComponent, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n_c = ModalComponent;\nexport default ModalComponent;\nvar _c;\n$RefreshReg$(_c, \"ModalComponent\");","map":{"version":3,"names":["useState","Button","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","ModalComponent","modalTitle","buttonTitle","buttonStyle","buttonSize","modalBody","closeText","confirmText","handleConfirm","_s","show","setShow","handleShow","closeModal","children","variant","size","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Footer","_c","$RefreshReg$"],"sources":["C:/Users/sanab/OneDrive/Bureau/PROJECT/2023-l2a2/trunk/exam-up/src/assests/components/ModalComponent.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\n//modifie\r\nfunction ModalComponent({\r\n  modalTitle, //titre du modal\r\n  buttonTitle, //titre du bouton qui déclenche le modal\r\n  buttonStyle, // variant du bouton bootstrap = couleur, style etc..\r\n  buttonSize, //accepte les valeurs \"sm\" = petit, \"lg\" = large et undefined = taille par défaut\r\n  modalBody, //ce qu'il y a à l'intérieur du modal texte, form ..\r\n  closeText, //texte du bouton fermer, annuler etc..\r\n  confirmText, //texte du bouton confirmer..\r\n  handleConfirm,\r\n\r\n}) {\r\n  const [show, setShow] = useState(false);\r\n\r\n  \r\n  const handleShow = () => setShow(true);\r\n  \r\n  const closeModal = () => {\r\n    setShow(false); \r\n    \r\n  };\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Button variant={buttonStyle} size={buttonSize} onClick={handleShow}>\r\n        {buttonTitle}\r\n      </Button>\r\n\r\n      <Modal\r\n        show={show}\r\n        onHide={closeModal}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalTitle}</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>{modalBody}</Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={closeModal}>\r\n            {closeText}\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleConfirm}>\r\n            {confirmText}</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalComponent;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,uBAAuB;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,cAAcA,CAAC;EACtBC,UAAU;EAAE;EACZC,WAAW;EAAE;EACbC,WAAW;EAAE;EACbC,UAAU;EAAE;EACZC,SAAS;EAAE;EACXC,SAAS;EAAE;EACXC,WAAW;EAAE;EACbC;AAEF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAGvC,MAAMmB,UAAU,GAAGA,CAAA,KAAMD,OAAO,CAAC,IAAI,CAAC;EAEtC,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvBF,OAAO,CAAC,KAAK,CAAC;EAEhB,CAAC;EAGD,oBACEd,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA,CAACH,MAAM;MAACqB,OAAO,EAAEZ,WAAY;MAACa,IAAI,EAAEZ,UAAW;MAACa,OAAO,EAAEL,UAAW;MAAAE,QAAA,EACjEZ;IAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAETxB,OAAA,CAACF,KAAK;MACJe,IAAI,EAAEA,IAAK;MACXY,MAAM,EAAET,UAAW;MACnBU,QAAQ,EAAC,QAAQ;MACjBC,QAAQ,EAAE,KAAM;MAAAV,QAAA,gBAEhBjB,OAAA,CAACF,KAAK,CAAC8B,MAAM;QAACC,WAAW;QAAAZ,QAAA,eACvBjB,OAAA,CAACF,KAAK,CAACgC,KAAK;UAAAb,QAAA,EAAEb;QAAU;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eAEfxB,OAAA,CAACF,KAAK,CAACiC,IAAI;QAAAd,QAAA,EAAET;MAAS;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAEpCxB,OAAA,CAACF,KAAK,CAACkC,MAAM;QAAAf,QAAA,gBACXjB,OAAA,CAACH,MAAM;UAACqB,OAAO,EAAC,WAAW;UAACE,OAAO,EAAEJ,UAAW;UAAAC,QAAA,EAC7CR;QAAS;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACTxB,OAAA,CAACH,MAAM;UAACqB,OAAO,EAAC,SAAS;UAACE,OAAO,EAAET,aAAc;UAAAM,QAAA,EAC9CP;QAAW;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA,eACR,CAAC;AAEP;AAACZ,EAAA,CAlDQT,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AAoDvB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}