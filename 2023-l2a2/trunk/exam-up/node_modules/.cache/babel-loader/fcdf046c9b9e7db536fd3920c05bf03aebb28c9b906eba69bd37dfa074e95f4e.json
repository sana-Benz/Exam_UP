{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanab\\\\OneDrive\\\\Bureau\\\\PROJECT\\\\2023-l2a2\\\\trunk\\\\exam-up\\\\src\\\\assests\\\\components\\\\HeaderExaminateur.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MenuExaminateur from \"../components/MenuExaminateur\";\nimport NavbarProfil from \"../components/NavbarProfil\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderExaminateur = () => {\n  _s();\n  const [nom, setNom] = useState('');\n  const [prenom, setPrenom] = useState('');\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/utilisateur/${id}`);\n        if (!response.ok) {\n          throw new Error('Erreur de réseau ou réponse non valide');\n        }\n        const data = await response.json();\n        setNom(data.nom);\n        setPrenom(data.prenom);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des données de l'utilisateur\", error);\n      }\n    };\n    if (id) {\n      fetchUserData();\n    }\n  }, [id]);\n  const urlLogo = `/profile-examinateur/${id}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavbarProfil, {\n      nom: nom,\n      prenom: prenom,\n      homePageURL: urlLogo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(MenuExaminateur, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n};\n_s(HeaderExaminateur, \"udPqpPCl+QWy8hPLDeI8o/6aqGU=\", false, function () {\n  return [useParams];\n});\n_c = HeaderExaminateur;\nexport default HeaderExaminateur;\nvar _c;\n$RefreshReg$(_c, \"HeaderExaminateur\");","map":{"version":3,"names":["React","useState","useEffect","MenuExaminateur","NavbarProfil","useParams","jsxDEV","_jsxDEV","HeaderExaminateur","_s","nom","setNom","prenom","setPrenom","id","fetchUserData","response","fetch","ok","Error","data","json","error","console","urlLogo","children","homePageURL","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sanab/OneDrive/Bureau/PROJECT/2023-l2a2/trunk/exam-up/src/assests/components/HeaderExaminateur.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MenuExaminateur from \"../components/MenuExaminateur\";\r\nimport NavbarProfil from \"../components/NavbarProfil\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\n  const HeaderExaminateur = () => {\r\n    const [nom, setNom] = useState('');\r\n    const [prenom, setPrenom] = useState('');\r\n    const { id }= useParams(); \r\n\r\n  \r\n    useEffect(() => {\r\n      const fetchUserData = async () => {\r\n        try {\r\n          const response = await fetch(`http://localhost:3001/utilisateur/${id}`);\r\n          if (!response.ok) {\r\n            throw new Error('Erreur de réseau ou réponse non valide');\r\n          }\r\n          const data = await response.json();\r\n          setNom(data.nom);\r\n          setPrenom(data.prenom);\r\n        } catch (error) {\r\n          console.error(\"Erreur lors de la récupération des données de l'utilisateur\", error);\r\n        }\r\n      };\r\n  \r\n      if (id) {\r\n        fetchUserData();\r\n      }\r\n    }, [id]);\r\n\r\n   const urlLogo =`/profile-examinateur/${id}`;\r\n  return (\r\n      <div>\r\n              <NavbarProfil nom={nom} prenom={prenom} homePageURL={urlLogo} />\r\n              <MenuExaminateur />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default HeaderExaminateur\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM;IAAEa;EAAG,CAAC,GAAET,SAAS,CAAC,CAAC;EAGzBH,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCH,EAAG,EAAC,CAAC;QACvE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;QAC3D;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCV,MAAM,CAACS,IAAI,CAACV,GAAG,CAAC;QAChBG,SAAS,CAACO,IAAI,CAACR,MAAM,CAAC;MACxB,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6DAA6D,EAAEA,KAAK,CAAC;MACrF;IACF,CAAC;IAED,IAAIR,EAAE,EAAE;MACNC,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACD,EAAE,CAAC,CAAC;EAET,MAAMU,OAAO,GAAG,wBAAuBV,EAAG,EAAC;EAC5C,oBACIP,OAAA;IAAAkB,QAAA,gBACQlB,OAAA,CAACH,YAAY;MAACM,GAAG,EAAEA,GAAI;MAACE,MAAM,EAAEA,MAAO;MAACc,WAAW,EAAEF;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEvB,OAAA,CAACJ,eAAe;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEZ,CAAC;AAAArB,EAAA,CAjCOD,iBAAiB;EAAA,QAGPH,SAAS;AAAA;AAAA0B,EAAA,GAHnBvB,iBAAiB;AAmCzB,eAAeA,iBAAiB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}