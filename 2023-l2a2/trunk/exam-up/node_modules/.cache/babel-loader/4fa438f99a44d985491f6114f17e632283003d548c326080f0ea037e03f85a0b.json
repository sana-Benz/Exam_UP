{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanab\\\\OneDrive\\\\Bureau\\\\PROJECT\\\\2023-l2a2\\\\trunk\\\\exam-up\\\\src\\\\assests\\\\components\\\\Examen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport QuestionExamen from './QuestionExamen';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Examen = ({\n  id_examen\n}) => {\n  _s();\n  const location = useLocation();\n  const {\n    duree_tot,\n    examInfosTitre\n  } = location.state;\n\n  // Maintenant, vous pouvez utiliser duree_tot et examInfosTitre dans votre composant\n  console.log(\"Durée totale:\", duree_tot);\n  console.log(\"Titre de l'examen:\", examInfosTitre);\n  const [arrayQuestionId, setArrayQuestionId] = useState([]);\n\n  //chercher la liste des ids des questions de l'examen à partir de l'id de l'examen\n  useEffect(() => {\n    const getQuestionList = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/questions_examen/${id_examen}`);\n        const jasonData = await response.json();\n        setArrayQuestionId(jasonData);\n      } catch (err) {\n        console.error(err.message);\n      }\n    };\n    getQuestionList();\n  }, [id_examen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"flex-end\"\n    },\n    children: arrayQuestionId.map((questionId, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"10px\",\n        marginRight: \"10px\"\n      },\n      children: [console.log(\"Question ID:\", questionId), /*#__PURE__*/_jsxDEV(QuestionExamen, {\n        id_question: questionId.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Examen, \"QwCf3yYUDhQN8ckowFpSVPjf+qI=\", false, function () {\n  return [useLocation];\n});\n_c = Examen;\nexport default Examen;\nvar _c;\n$RefreshReg$(_c, \"Examen\");","map":{"version":3,"names":["React","useState","useEffect","QuestionExamen","useLocation","jsxDEV","_jsxDEV","Examen","id_examen","_s","location","duree_tot","examInfosTitre","state","console","log","arrayQuestionId","setArrayQuestionId","getQuestionList","response","fetch","jasonData","json","err","error","message","style","display","flexDirection","alignItems","children","map","questionId","index","marginTop","marginRight","id_question","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sanab/OneDrive/Bureau/PROJECT/2023-l2a2/trunk/exam-up/src/assests/components/Examen.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport QuestionExamen from './QuestionExamen'\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst Examen = ({id_examen}) => {\r\n  const location = useLocation();\r\n  const { duree_tot, examInfosTitre } = location.state;\r\n\r\n  // Maintenant, vous pouvez utiliser duree_tot et examInfosTitre dans votre composant\r\n  console.log(\"Durée totale:\", duree_tot);\r\n  console.log(\"Titre de l'examen:\", examInfosTitre);\r\n  \r\n  const [arrayQuestionId, setArrayQuestionId] = useState([]);\r\n\r\n  //chercher la liste des ids des questions de l'examen à partir de l'id de l'examen\r\n  useEffect(() => {\r\n    const getQuestionList = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:3001/questions_examen/${id_examen}`\r\n        );\r\n        const jasonData = await response.json();\r\n        setArrayQuestionId(jasonData);\r\n      } catch (err) {\r\n        console.error(err.message);\r\n      }\r\n    };\r\n    getQuestionList();\r\n  }, [id_examen]);\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"flex-end\" }}>\r\n    {arrayQuestionId.map((questionId , index) => (\r\n      <div key={index} style={{ marginTop: \"10px\", marginRight: \"10px\" }}>\r\n        \r\n        {console.log(\"Question ID:\", questionId)}\r\n        <QuestionExamen id_question={questionId.id} />\r\n      </div>\r\n    ))}\r\n  </div>\r\n \r\n  )\r\n}\r\n\r\nexport default Examen\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,MAAM,GAAGA,CAAC;EAACC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO,SAAS;IAAEC;EAAe,CAAC,GAAGF,QAAQ,CAACG,KAAK;;EAEpD;EACAC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,SAAS,CAAC;EACvCG,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,cAAc,CAAC;EAEjD,MAAM,CAACI,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMgB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,0CAAyCZ,SAAU,EACtD,CAAC;QACD,MAAMa,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACvCL,kBAAkB,CAACI,SAAS,CAAC;MAC/B,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZT,OAAO,CAACU,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;MAC5B;IACF,CAAC;IACDP,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACV,SAAS,CAAC,CAAC;EAIf,oBACEF,OAAA;IAAKoB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAW,CAAE;IAAAC,QAAA,EAChFd,eAAe,CAACe,GAAG,CAAC,CAACC,UAAU,EAAGC,KAAK,kBACtC3B,OAAA;MAAiBoB,KAAK,EAAE;QAAEQ,SAAS,EAAE,MAAM;QAAEC,WAAW,EAAE;MAAO,CAAE;MAAAL,QAAA,GAEhEhB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEiB,UAAU,CAAC,eACxC1B,OAAA,CAACH,cAAc;QAACiC,WAAW,EAAEJ,UAAU,CAACK;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAHtCR,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAGR,CAAC;AAAAhC,EAAA,CAxCKF,MAAM;EAAA,QACOH,WAAW;AAAA;AAAAsC,EAAA,GADxBnC,MAAM;AA0CZ,eAAeA,MAAM;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}