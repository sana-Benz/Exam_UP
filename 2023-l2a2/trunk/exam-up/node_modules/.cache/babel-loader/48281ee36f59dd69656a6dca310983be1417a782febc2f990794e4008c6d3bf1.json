{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanab\\\\OneDrive\\\\Bureau\\\\PROJECT\\\\2023-l2a2\\\\trunk\\\\exam-up\\\\src\\\\assests\\\\components\\\\ExamList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ExamCard from './ExamCard';\nimport '../Pages/style/ExamList.css';\nimport { Link } from 'react-router-dom';\n\n// modifié \n// prends en argument une liste d'exam cards et le titre de la liste, si on ajoute des examens seule la longueur varie\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamList = ({\n  listTitle,\n  statut\n}) => {\n  _s();\n  const [examCards, setExamCards] = useState([]);\n  const [id_utilisateur, setIdUtilisateur] = useState(1);\n\n  //fonction qui va chercher en bdd la liste d'examen de l'utilisateur avec le statut spécifié\n  const getExams = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/examens/${id_utilisateur}/${statut}`);\n      const jasonData = await response.json(); //parse data\n      setExamCards(jasonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  useEffect(() => {\n    getExams();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"examListContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"listTitle\",\n        children: [listTitle, \" :\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardsContainer\",\n      children: examCards.map(exam => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/Détails-examen/${exam.id}/${statut}`,\n        className: \"examCardLink\",\n        style: {\n          textDecoration: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(ExamCard, {\n          titre: exam.titre,\n          statut: statut,\n          className: \"card\",\n          titleStyle: \"cardTitle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, exam.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamList, \"AlO7E+FSBefCOaFz+CSm3I86N3s=\");\n_c = ExamList;\nexport default ExamList;\nvar _c;\n$RefreshReg$(_c, \"ExamList\");","map":{"version":3,"names":["React","useState","useEffect","ExamCard","Link","jsxDEV","_jsxDEV","ExamList","listTitle","statut","_s","examCards","setExamCards","id_utilisateur","setIdUtilisateur","getExams","response","fetch","jasonData","json","err","console","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","exam","to","id","style","textDecoration","titre","titleStyle","_c","$RefreshReg$"],"sources":["C:/Users/sanab/OneDrive/Bureau/PROJECT/2023-l2a2/trunk/exam-up/src/assests/components/ExamList.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport ExamCard from './ExamCard'\r\nimport '../Pages/style/ExamList.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// modifié \r\n// prends en argument une liste d'exam cards et le titre de la liste, si on ajoute des examens seule la longueur varie\r\n\r\nconst ExamList = ({ listTitle, statut}) => {\r\n  const [examCards, setExamCards] = useState([]);\r\n  const [id_utilisateur, setIdUtilisateur] = useState(1); \r\n\r\n  //fonction qui va chercher en bdd la liste d'examen de l'utilisateur avec le statut spécifié\r\n  const getExams = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/examens/${id_utilisateur}/${statut}`);\r\n      const jasonData = await response.json(); //parse data\r\n      setExamCards(jasonData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getExams(); \r\n  }, []); \r\n\r\n\r\n  return (\r\n    <div className=\"examListContainer\">\r\n      <div className=\"titleContainer\">\r\n        <h1 className=\"listTitle\">{listTitle} :</h1>\r\n      </div>\r\n\r\n      <div className=\"cardsContainer\">\r\n      {examCards.map((exam) => (\r\n          <Link key={exam.id} to={`/Détails-examen/${exam.id}/${statut}`} className=\"examCardLink\" style={{ textDecoration: 'none' }}>\r\n            <ExamCard\r\n              titre={exam.titre}\r\n              statut={statut}\r\n              className=\"card\"\r\n              titleStyle=\"cardTitle\"\r\n            />\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n  };\r\n  \r\n  export default ExamList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,6BAA6B;AACpC,SAASC,IAAI,QAAQ,kBAAkB;;AAEvC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,cAAc,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;;EAEtD;EACA,MAAMc,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iCAAgCJ,cAAe,IAAGJ,MAAO,EAAC,CAAC;MACzF,MAAMS,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;MACzCP,YAAY,CAACM,SAAS,CAAC;IACzB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC;IAC5B;EACF,CAAC;EACDrB,SAAS,CAAC,MAAM;IACda,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAGN,oBACET,OAAA;IAAKkB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCnB,OAAA;MAAKkB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BnB,OAAA;QAAIkB,SAAS,EAAC,WAAW;QAAAC,QAAA,GAAEjB,SAAS,EAAC,IAAE;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eAENvB,OAAA;MAAKkB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC9Bd,SAAS,CAACmB,GAAG,CAAEC,IAAI,iBAChBzB,OAAA,CAACF,IAAI;QAAe4B,EAAE,EAAG,mBAAkBD,IAAI,CAACE,EAAG,IAAGxB,MAAO,EAAE;QAACe,SAAS,EAAC,cAAc;QAACU,KAAK,EAAE;UAAEC,cAAc,EAAE;QAAO,CAAE;QAAAV,QAAA,eACzHnB,OAAA,CAACH,QAAQ;UACPiC,KAAK,EAAEL,IAAI,CAACK,KAAM;UAClB3B,MAAM,EAAEA,MAAO;UACfe,SAAS,EAAC,MAAM;UAChBa,UAAU,EAAC;QAAW;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB;MAAC,GANOE,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAER,CAAC;AAACnB,EAAA,CAvCEH,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAyCZ,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}