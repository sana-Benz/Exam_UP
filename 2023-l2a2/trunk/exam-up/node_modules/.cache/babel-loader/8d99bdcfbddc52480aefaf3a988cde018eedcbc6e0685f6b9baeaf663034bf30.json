{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanab\\\\OneDrive\\\\Bureau\\\\PROJECT\\\\2023-l2a2\\\\trunk\\\\exam-up\\\\src\\\\assests\\\\components\\\\Examen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport QuestionExamen from \"./QuestionExamen\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Examen = ({\n  id_examen,\n  etat\n}) => {\n  _s();\n  const {\n    id\n  } = useParams;\n  const [arrayQuestionId, setArrayQuestionId] = useState([]);\n  const [allResponses, setAllResponses] = useState({});\n  const [soumis, setSoumis] = useState(false);\n  useEffect(() => {\n    const storedResponses = localStorage.getItem(`idReponses_${id_examen}`);\n    if (storedResponses) {\n      setAllResponses(JSON.parse(storedResponses));\n    }\n    console.log(\"voici les réponses déja enregistress\", storedResponses);\n  }, [id_examen]);\n  useEffect(() => {\n    const getQuestionList = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/questions_examen/${id_examen}`);\n        const jsonData = await response.json();\n        setArrayQuestionId(jsonData);\n      } catch (err) {\n        console.error(err.message);\n      }\n    };\n    getQuestionList();\n  }, [id_examen]);\n  const handleUpdateResponse = (questionId, response) => {\n    setAllResponses(prevResponses => ({\n      ...prevResponses,\n      [questionId]: response\n    }));\n    localStorage.setItem(`idReponses_${id_examen}`, JSON.stringify(allResponses));\n    console.log(\"les réponses:\", allResponses);\n  };\n  const handleSubmit = async () => {\n    if (Object.keys(allResponses).length > 0) {\n      try {\n        const response = await fetch(`http://localhost:3001/Envoyer_reponses_examine/${id_examen}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            allResponses\n          })\n        });\n        await response.json();\n        console.log(\"réponses envoyées à la base de données!\");\n        localStorage.removeItem(`idReponses_${id_examen}`);\n        window.location.href = `/Profile_examine/${id}`;\n      } catch (error) {\n        console.error(\"Erreur:\", error);\n      }\n    } else {\n      console.log(\"Aucune réponse à soumettre\");\n    }\n  };\n  useEffect(() => {\n    if (etat && !soumis) {\n      handleSubmit();\n    }\n  }, [etat, soumis]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"flex-end\"\n    },\n    children: arrayQuestionId.map((questionId, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"10px\",\n        marginRight: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(QuestionExamen, {\n        id_question: questionId.id,\n        id_examen: id_examen,\n        indice: index,\n        etat: etat,\n        onUpdateResponse: handleUpdateResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Examen, \"GLq/V492YevYAIYMI0AcrYuueFs=\");\n_c = Examen;\nexport default _c2 = /*#__PURE__*/React.memo(Examen);\nvar _c, _c2;\n$RefreshReg$(_c, \"Examen\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","QuestionExamen","useLocation","useParams","jsxDEV","_jsxDEV","Examen","id_examen","etat","_s","id","arrayQuestionId","setArrayQuestionId","allResponses","setAllResponses","soumis","setSoumis","storedResponses","localStorage","getItem","JSON","parse","console","log","getQuestionList","response","fetch","jsonData","json","err","error","message","handleUpdateResponse","questionId","prevResponses","setItem","stringify","handleSubmit","Object","keys","length","method","headers","body","removeItem","window","location","href","style","display","flexDirection","alignItems","children","map","index","marginTop","marginRight","id_question","indice","onUpdateResponse","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/sanab/OneDrive/Bureau/PROJECT/2023-l2a2/trunk/exam-up/src/assests/components/Examen.jsx"],"sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport QuestionExamen from \"./QuestionExamen\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\n\r\nconst Examen = ({ id_examen, etat }) => {\r\n  const{id}= useParams;\r\n  const [arrayQuestionId, setArrayQuestionId] = useState([]);\r\n  const [allResponses, setAllResponses] = useState({});\r\n  const [soumis, setSoumis]= useState(false);\r\n\r\n  useEffect(() => {\r\n    const storedResponses = localStorage.getItem(`idReponses_${id_examen}`);\r\n    if (storedResponses) {\r\n      setAllResponses(JSON.parse(storedResponses));\r\n    }\r\n    console.log(\"voici les réponses déja enregistress\", storedResponses);\r\n  }, [id_examen]);\r\n\r\n  useEffect(() => {\r\n    const getQuestionList = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:3001/questions_examen/${id_examen}`\r\n        );\r\n        const jsonData = await response.json();\r\n        setArrayQuestionId(jsonData);\r\n      } catch (err) {\r\n        console.error(err.message);\r\n      }\r\n    };\r\n    getQuestionList();\r\n  }, [id_examen]);\r\n\r\n  const handleUpdateResponse = (questionId, response) => {\r\n    setAllResponses((prevResponses) => ({\r\n      ...prevResponses,\r\n      [questionId]: response,\r\n    }));\r\n    localStorage.setItem(`idReponses_${id_examen}`, JSON.stringify(allResponses));\r\n    console.log(\"les réponses:\", allResponses);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (Object.keys(allResponses).length > 0) {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:3001/Envoyer_reponses_examine/${id_examen}`,\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ allResponses }),\r\n          }\r\n        );\r\n        await response.json();\r\n        console.log(\"réponses envoyées à la base de données!\");\r\n        localStorage.removeItem(`idReponses_${id_examen}`);\r\n        window.location.href = `/Profile_examine/${id}`;\r\n      } catch (error) {\r\n        console.error(\"Erreur:\", error);\r\n      }\r\n    } else {\r\n      console.log(\"Aucune réponse à soumettre\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (etat && !soumis) {\r\n      handleSubmit();\r\n    }\r\n  }, [etat, soumis]);\r\n\r\n  \r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"flex-end\" }}>\r\n      {arrayQuestionId.map((questionId, index) => (\r\n        <div key={index} style={{ marginTop: \"10px\", marginRight: \"10px\" }}>\r\n          <QuestionExamen\r\n            id_question={questionId.id}\r\n            id_examen={id_examen}\r\n            indice={index}\r\n            etat={etat}\r\n            onUpdateResponse={handleUpdateResponse}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Examen);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}