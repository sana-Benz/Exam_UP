{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanab\\\\OneDrive\\\\Bureau\\\\PROJECT\\\\2023-l2a2\\\\trunk\\\\exam-up\\\\src\\\\assests\\\\components\\\\button.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = ({\n  text,\n  //saisir le texte que doit contenir le button\n  fontSize = '20px',\n  //la taille de texte,par deafut c'est 20 px , peut etre changé\n  fontFamily = 'Montserrat',\n  //la police de text\n  fontWeight = 'bold',\n  color,\n  //la couleur de button\n  textColor,\n  //la couleur de texte\n  hoverColor = 'transparent',\n  //la couleur de button quand on le survol avec la souris (on hover)\n  hoverTextColor,\n  //la couleur de texte quand on le survol avec la souris (on hover)\n  hoverBorderColor,\n  //la couleur de la bordure de  button quand on le survol avec la souris (on hover)\n  width = '200px',\n  //la taille de button, par défuat c'est 200 px\n  style,\n  //pour ajoutez des style en plus au button\n  hoverStyle,\n  //pour rajoutez des style en plus au button quand on le survole\n  ...props\n}) => {\n  _s();\n  const [isHovered, setIsHovered] = useState(false);\n  const defaultStyle = {\n    display: 'inline-flex',\n    // Pour le centrage vertical et horizontal\n    justifyContent: 'center',\n    // Centrage horizontal avec flexbox\n    alignItems: 'center',\n    // Centrage vertical avec flexbox\n    width,\n    padding: '10px 20px',\n    backgroundColor: color,\n    border: `2px solid ${textColor}`,\n    borderColor: 'inherit',\n    borderRadius: '20px',\n    color: textColor,\n    fontSize,\n    fontFamily,\n    fontWeight,\n    cursor: 'pointer',\n    outline: 'none',\n    transition: 'all 0.3s ease',\n    ...style\n  };\n  const defaultHoverStyle = {\n    backgroundColor: hoverColor,\n    color: hoverTextColor,\n    borderColor: hoverBorderColor,\n    ...hoverStyle\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      ...defaultStyle,\n      ...(isHovered ? defaultHoverStyle : {})\n    },\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => setIsHovered(false),\n    ...props,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Button, \"FPQn8a98tPjpohC7NUYORQR8GJE=\");\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Button","text","fontSize","fontFamily","fontWeight","color","textColor","hoverColor","hoverTextColor","hoverBorderColor","width","style","hoverStyle","props","_s","isHovered","setIsHovered","defaultStyle","display","justifyContent","alignItems","padding","backgroundColor","border","borderColor","borderRadius","cursor","outline","transition","defaultHoverStyle","onMouseEnter","onMouseLeave","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sanab/OneDrive/Bureau/PROJECT/2023-l2a2/trunk/exam-up/src/assests/components/button.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nconst Button = ({\r\n  text,          //saisir le texte que doit contenir le button\r\n  fontSize = '20px',    //la taille de texte,par deafut c'est 20 px , peut etre changé\r\n  fontFamily = 'Montserrat',   //la police de text\r\n  fontWeight = 'bold',  \r\n  color,     //la couleur de button\r\n  textColor,   //la couleur de texte\r\n  hoverColor = 'transparent',    //la couleur de button quand on le survol avec la souris (on hover)\r\n  hoverTextColor,         //la couleur de texte quand on le survol avec la souris (on hover)\r\n  hoverBorderColor,         //la couleur de la bordure de  button quand on le survol avec la souris (on hover)\r\n  width = '200px',     //la taille de button, par défuat c'est 200 px\r\n  style,      //pour ajoutez des style en plus au button\r\n  hoverStyle,   //pour rajoutez des style en plus au button quand on le survole\r\n  ...props    \r\n}) => {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const defaultStyle = {\r\n    display: 'inline-flex', // Pour le centrage vertical et horizontal\r\n    justifyContent: 'center', // Centrage horizontal avec flexbox\r\n    alignItems: 'center', // Centrage vertical avec flexbox\r\n    width,\r\n    padding: '10px 20px',\r\n    backgroundColor: color,\r\n    border: `2px solid ${textColor}`,\r\n    borderColor: 'inherit',\r\n    borderRadius: '20px',\r\n    color: textColor,\r\n    fontSize,\r\n    fontFamily,\r\n    fontWeight,\r\n    cursor: 'pointer',\r\n    outline: 'none',\r\n    transition: 'all 0.3s ease',\r\n    ...style,\r\n  };\r\n\r\n  const defaultHoverStyle = {\r\n    backgroundColor: hoverColor,\r\n    color: hoverTextColor,\r\n    borderColor: hoverBorderColor,\r\n    ...hoverStyle,\r\n  };\r\n\r\n  return (\r\n    <button\r\n      style={{ ...defaultStyle, ...(isHovered ? defaultHoverStyle : {}) }}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n      {...props}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,MAAM,GAAGA,CAAC;EACdC,IAAI;EAAW;EACfC,QAAQ,GAAG,MAAM;EAAK;EACtBC,UAAU,GAAG,YAAY;EAAI;EAC7BC,UAAU,GAAG,MAAM;EACnBC,KAAK;EAAM;EACXC,SAAS;EAAI;EACbC,UAAU,GAAG,aAAa;EAAK;EAC/BC,cAAc;EAAU;EACxBC,gBAAgB;EAAU;EAC1BC,KAAK,GAAG,OAAO;EAAM;EACrBC,KAAK;EAAO;EACZC,UAAU;EAAI;EACd,GAAGC;AACL,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMoB,YAAY,GAAG;IACnBC,OAAO,EAAE,aAAa;IAAE;IACxBC,cAAc,EAAE,QAAQ;IAAE;IAC1BC,UAAU,EAAE,QAAQ;IAAE;IACtBV,KAAK;IACLW,OAAO,EAAE,WAAW;IACpBC,eAAe,EAAEjB,KAAK;IACtBkB,MAAM,EAAG,aAAYjB,SAAU,EAAC;IAChCkB,WAAW,EAAE,SAAS;IACtBC,YAAY,EAAE,MAAM;IACpBpB,KAAK,EAAEC,SAAS;IAChBJ,QAAQ;IACRC,UAAU;IACVC,UAAU;IACVsB,MAAM,EAAE,SAAS;IACjBC,OAAO,EAAE,MAAM;IACfC,UAAU,EAAE,eAAe;IAC3B,GAAGjB;EACL,CAAC;EAED,MAAMkB,iBAAiB,GAAG;IACxBP,eAAe,EAAEf,UAAU;IAC3BF,KAAK,EAAEG,cAAc;IACrBgB,WAAW,EAAEf,gBAAgB;IAC7B,GAAGG;EACL,CAAC;EAED,oBACEb,OAAA;IACEY,KAAK,EAAE;MAAE,GAAGM,YAAY;MAAE,IAAIF,SAAS,GAAGc,iBAAiB,GAAG,CAAC,CAAC;IAAE,CAAE;IACpEC,YAAY,EAAEA,CAAA,KAAMd,YAAY,CAAC,IAAI,CAAE;IACvCe,YAAY,EAAEA,CAAA,KAAMf,YAAY,CAAC,KAAK,CAAE;IAAA,GACpCH,KAAK;IAAAmB,QAAA,EAER/B;EAAI;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEb,CAAC;AAACtB,EAAA,CAtDId,MAAM;AAAAqC,EAAA,GAANrC,MAAM;AAwDZ,eAAeA,MAAM;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}