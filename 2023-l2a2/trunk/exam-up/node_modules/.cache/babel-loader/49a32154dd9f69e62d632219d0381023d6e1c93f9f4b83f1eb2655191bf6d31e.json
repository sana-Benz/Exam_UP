{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanab\\\\OneDrive\\\\Bureau\\\\PROJECT\\\\2023-l2a2\\\\trunk\\\\exam-up\\\\src\\\\assests\\\\components\\\\QuestionCrea.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../Pages/style/QuestionCreation.css\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport ReponseCrea from \"./ReponseCrea\";\n\n//component qui permet au professeur d'indiquer les informations sur une question \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuestionCrea = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    id,\n    id_examen,\n    id_question\n  } = useParams(); //va m'indiquer si la question existe\n  console.log(\"id_question=\", id_question);\n  const [infosQuestion, setInfosQuestion] = useState([]);\n  //pour stocker les valeurs des champs\n  const [titre_q, setTitre_q] = useState(\"\");\n  const [duree_q, setDuree_q] = useState(\"\");\n  const [bareme_q, setBareme_q] = useState(\"\");\n  const [type_q, setType_q] = useState(\"\");\n  const [type_q_DB, setType_q_DB] = useState(\"\");\n  const validerInput = () => {\n    if (titre_q.trim() === \"\" || isNaN(parseFloat(duree_q)) || isNaN(parseFloat(bareme_q)) || type_q === \"\") {\n      console.log(\"Il faut renseigner tous les champs avec des valeurs valides\");\n      return false;\n    }\n    return true;\n  };\n  const handleTitreChange = e => {\n    setTitre_q(e.target.value);\n  };\n  const handleDureeChange = e => {\n    setDuree_q(e.target.value);\n  };\n  const handleBaremeChange = e => {\n    setBareme_q(e.target.value);\n  };\n  const handleTypeChange = e => {\n    setType_q(e.target.value);\n  };\n  const QuestionExiste = () => {\n    _s();\n    //get toutes les informations d'une question si la question existe déjà en bdd\n\n    const getInfosQuestion = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/question/${id_question}`);\n        const jasonData = await response.json();\n        setInfosQuestion(jasonData);\n        setType_q_DB(jasonData[0].type);\n        setType_q(jasonData[0].type);\n        setTitre_q(jasonData[0].texte);\n        setDuree_q(jasonData[0].duree);\n        setBareme_q(jasonData[0].nb_points);\n      } catch (err) {\n        console.error(err.message);\n      }\n    };\n    useEffect(() => {\n      getInfosQuestion();\n    }, []);\n    const handleSubmit = async () => {\n      if (!validerInput()) {\n        console.log(\"il faut que tous les champs soient valides\"); //ajouter alerte plus tard\n        return;\n      }\n      try {\n        const body = {\n          titre_q,\n          duree_q,\n          bareme_q,\n          type_q\n        }; // everytime we need to add data to database\n        const response = await fetch(`http://localhost:3001/Mettre_a_jour_infos_question/${id_question}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        });\n      } catch (err) {\n        console.error(err.message);\n      }\n      window.location.href = `/infos_reponses/${id}/${id_examen}/${id_question}/${type_q}`;\n    };\n    if (infosQuestion.length > 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"big_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temps_container\",\n              children: [\"Temps question :\", /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                style: {\n                  height: \"30px\",\n                  width: \"110px\",\n                  textAlign: \"left\"\n                },\n                value: duree_q,\n                onChange: handleDureeChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bar\\xE8me_container\",\n              children: [\"Bar\\xE8me question :\", /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                style: {\n                  height: \"30px\",\n                  width: \"110px\",\n                  textAlign: \"left\"\n                },\n                value: bareme_q,\n                onChange: handleBaremeChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Question_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Intitul\\xE9 de la question :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              style: {\n                textAlign: \"left\"\n              },\n              value: titre_q,\n              onChange: handleTitreChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-type\",\n            children: [\"Choisir le type de la question:\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-radio\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"qcm\",\n                name: \"questionType\",\n                value: \"QCM\",\n                defaultChecked: type_q_DB === \"QCM\",\n                onChange: handleTypeChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"qcm\",\n                \"data-label\": \"QCM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-radio\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"qcu\",\n                name: \"questionType\",\n                value: \"QCU\",\n                defaultChecked: type_q_DB === \"QCU\",\n                onChange: handleTypeChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"qcu\",\n                \"data-label\": \"QCU\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"dark\",\n              size: \"lg\",\n              onClick: handleSubmit,\n              children: [\" \", \"Enregistrer la question\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Chargement...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  _s(QuestionExiste, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  const QuestionNExistePas = () => {\n    const handleSubmit = async () => {\n      if (!validerInput()) {\n        console.log(\"il faut que tous les champs soient valides\"); //ajouter alerte plus tard\n        return;\n      }\n      try {\n        const response = await fetch(`http://localhost:3001/Ajouter_infos_question/${id_examen}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            titre_q,\n            duree_q,\n            bareme_q,\n            type_q\n          })\n        });\n        const data = await response.json();\n        const {\n          id_question,\n          type\n        } = data;\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n\n      //and I need to render here the second component and pass to it 2 props\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"big_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temps_container\",\n          children: [\"Temps question :\", /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            style: {\n              height: \"30px\",\n              width: \"110px\",\n              textAlign: \"left\"\n            },\n            placeholder: \"00:00:00\",\n            value: duree_q,\n            onChange: handleDureeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar\\xE8me_container\",\n          children: [\"Bar\\xE8me question :\", /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            style: {\n              height: \"30px\",\n              width: \"110px\",\n              textAlign: \"left\"\n            },\n            placeholder: \"points\",\n            value: bareme_q,\n            onChange: handleBaremeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Question_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Intitul\\xE9 de la question :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          style: {\n            textAlign: \"left\"\n          },\n          placeholder: \"Texte de la question\",\n          value: titre_q,\n          onChange: handleTitreChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-type\",\n        children: [\"Choisir le type de la question:\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-radio\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"qcm\",\n            name: \"questionType\",\n            value: \"QCM\",\n            onChange: handleTypeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"qcm\",\n            \"data-label\": \"QCM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-radio\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"qcu\",\n            name: \"questionType\",\n            value: \"QCU\",\n            onChange: handleTypeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"qcu\",\n            \"data-label\": \"QCU\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          size: \"lg\",\n          onClick: handleSubmit,\n          children: [\" \", \"Enregistrer la question\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: id_question ? QuestionExiste() : QuestionNExistePas()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 10\n  }, this);\n};\n_s2(QuestionCrea, \"1NoiPRMKUVXePzqcOZ6ignzwlRE=\", false, function () {\n  return [useParams];\n});\n_c = QuestionCrea;\nexport default QuestionCrea;\nvar _c;\n$RefreshReg$(_c, \"QuestionCrea\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","useParams","ReponseCrea","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionCrea","_s2","_s","$RefreshSig$","id","id_examen","id_question","console","log","infosQuestion","setInfosQuestion","titre_q","setTitre_q","duree_q","setDuree_q","bareme_q","setBareme_q","type_q","setType_q","type_q_DB","setType_q_DB","validerInput","trim","isNaN","parseFloat","handleTitreChange","e","target","value","handleDureeChange","handleBaremeChange","handleTypeChange","QuestionExiste","getInfosQuestion","response","fetch","jasonData","json","type","texte","duree","nb_points","err","error","message","handleSubmit","body","method","headers","JSON","stringify","window","location","href","length","children","className","Control","style","height","width","textAlign","onChange","fileName","_jsxFileName","lineNumber","columnNumber","name","defaultChecked","htmlFor","display","justifyContent","variant","size","onClick","QuestionNExistePas","data","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/sanab/OneDrive/Bureau/PROJECT/2023-l2a2/trunk/exam-up/src/assests/components/QuestionCrea.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../Pages/style/QuestionCreation.css\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ReponseCrea from \"./ReponseCrea\";\r\n\r\n//component qui permet au professeur d'indiquer les informations sur une question \r\n\r\nconst QuestionCrea = () => {\r\n  const { id,id_examen,id_question } = useParams(); //va m'indiquer si la question existe\r\n  console.log(\"id_question=\", id_question);\r\n  const [infosQuestion, setInfosQuestion] = useState([]);\r\n  //pour stocker les valeurs des champs\r\n  const [titre_q, setTitre_q] = useState(\"\");\r\n  const [duree_q, setDuree_q] = useState(\"\");\r\n  const [bareme_q, setBareme_q] = useState(\"\");\r\n  const [type_q, setType_q] = useState(\"\");\r\n  const [type_q_DB, setType_q_DB] = useState(\"\");\r\n\r\n  const validerInput = () => {\r\n    if (\r\n      titre_q.trim() === \"\" ||\r\n      isNaN(parseFloat(duree_q)) ||\r\n      isNaN(parseFloat(bareme_q)) ||\r\n      type_q === \"\"\r\n    ) {\r\n      console.log(\r\n        \"Il faut renseigner tous les champs avec des valeurs valides\"\r\n      );\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleTitreChange = (e) => {\r\n    setTitre_q(e.target.value);\r\n  };\r\n\r\n  const handleDureeChange = (e) => {\r\n    setDuree_q(e.target.value);\r\n  };\r\n\r\n  const handleBaremeChange = (e) => {\r\n    setBareme_q(e.target.value);\r\n  };\r\n\r\n  const handleTypeChange = (e) => {\r\n    setType_q(e.target.value);\r\n  };\r\n  const QuestionExiste = () => {\r\n    //get toutes les informations d'une question si la question existe déjà en bdd\r\n\r\n    const getInfosQuestion = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:3001/question/${id_question}`\r\n        );\r\n        const jasonData = await response.json();\r\n        setInfosQuestion(jasonData);\r\n        setType_q_DB(jasonData[0].type);\r\n        setType_q(jasonData[0].type);\r\n        setTitre_q(jasonData[0].texte);\r\n        setDuree_q(jasonData[0].duree);\r\n        setBareme_q(jasonData[0].nb_points);\r\n      } catch (err) {\r\n        console.error(err.message);\r\n      }\r\n    };\r\n    useEffect(() => {\r\n      getInfosQuestion();\r\n    }, []);\r\n\r\n    const handleSubmit = async () => {\r\n      if (!validerInput()) {\r\n        console.log(\"il faut que tous les champs soient valides\"); //ajouter alerte plus tard\r\n        return;\r\n      }\r\n      try {\r\n          const body ={titre_q,duree_q,bareme_q,type_q}; // everytime we need to add data to database\r\n          const response = await fetch (`http://localhost:3001/Mettre_a_jour_infos_question/${id_question}`,{\r\n              method : \"PUT\",\r\n              headers : {\"Content-type\" : \"application/json\"},\r\n              body: JSON.stringify(body) \r\n            });\r\n      }catch(err){\r\n          console.error(err.message);\r\n      }\r\n      window.location.href = `/infos_reponses/${id}/${id_examen}/${id_question}/${type_q}`;\r\n    };\r\n\r\n   \r\n    if (infosQuestion.length > 0) {\r\n      return (\r\n        <>\r\n          <div className=\"big_container\">\r\n            <div className=\"flex_container\">\r\n              <div className=\"temps_container\">\r\n                Temps question :\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  style={{ height: \"30px\", width: \"110px\", textAlign: \"left\" }}\r\n                  value={duree_q}\r\n                  onChange={handleDureeChange}\r\n                />\r\n              </div>\r\n              <div className=\"barème_container\">\r\n                Barème question :\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  style={{ height: \"30px\", width: \"110px\", textAlign: \"left\" }}\r\n                  value={bareme_q}\r\n                  onChange={handleBaremeChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"Question_container\">\r\n              <p>Intitulé de la question :</p>\r\n              <textarea\r\n                style={{ textAlign: \"left\" }}\r\n                value={titre_q}\r\n                onChange={handleTitreChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"question-type\">\r\n              Choisir le type de la question:\r\n              <div className=\"custom-radio\">\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"qcm\"\r\n                  name=\"questionType\"\r\n                  value=\"QCM\"\r\n                  defaultChecked={type_q_DB === \"QCM\"}\r\n                  onChange={handleTypeChange}\r\n                />\r\n                <label htmlFor=\"qcm\" data-label=\"QCM\"></label>\r\n              </div>\r\n              <div className=\"custom-radio\">\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"qcu\"\r\n                  name=\"questionType\"\r\n                  value=\"QCU\"\r\n                  defaultChecked={type_q_DB === \"QCU\"}\r\n                  onChange={handleTypeChange}\r\n                />\r\n                <label htmlFor=\"qcu\" data-label=\"QCU\"></label>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <Button variant=\"dark\" size=\"lg\" onClick={handleSubmit}>\r\n                {\" \"}\r\n                Enregistrer la question{\" \"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return <div>Chargement...</div>;\r\n    }\r\n  };\r\n\r\n  const QuestionNExistePas = () => {\r\n\r\n    const handleSubmit = async () => {\r\n      if (!validerInput()) {\r\n        console.log(\"il faut que tous les champs soient valides\"); //ajouter alerte plus tard\r\n        return;\r\n      }\r\n      try {\r\n        const response = await fetch(`http://localhost:3001/Ajouter_infos_question/${id_examen}`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            titre_q,\r\n            duree_q,\r\n            bareme_q,\r\n            type_q,\r\n          }),\r\n        });\r\n        const data = await response.json();\r\n        const { id_question, type } = data; \r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n\r\n\r\n\r\n\r\n      //and I need to render here the second component and pass to it 2 props\r\n    };\r\n\r\n    return (\r\n      <div className=\"big_container\">\r\n        <div className=\"flex_container\">\r\n          <div className=\"temps_container\">\r\n            Temps question :\r\n            <Form.Control\r\n              type=\"text\"\r\n              style={{ height: \"30px\", width: \"110px\", textAlign: \"left\" }}\r\n              placeholder={\"00:00:00\"}\r\n              value={duree_q}\r\n              onChange={handleDureeChange}\r\n            />\r\n          </div>\r\n          <div className=\"barème_container\">\r\n            Barème question :\r\n            <Form.Control\r\n              type=\"text\"\r\n              style={{ height: \"30px\", width: \"110px\", textAlign: \"left\" }}\r\n              placeholder={\"points\"}\r\n              value={bareme_q}\r\n              onChange={handleBaremeChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"Question_container\">\r\n          <p>Intitulé de la question :</p>\r\n          <textarea\r\n            style={{ textAlign: \"left\" }}\r\n            placeholder={\"Texte de la question\"}\r\n            value={titre_q}\r\n            onChange={handleTitreChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"question-type\">\r\n          Choisir le type de la question:\r\n          <div className=\"custom-radio\">\r\n            <input\r\n              type=\"radio\"\r\n              id=\"qcm\"\r\n              name=\"questionType\"\r\n              value=\"QCM\"\r\n              onChange={handleTypeChange}\r\n            />\r\n            <label htmlFor=\"qcm\" data-label=\"QCM\"></label>\r\n          </div>\r\n          <div className=\"custom-radio\">\r\n            <input\r\n              type=\"radio\"\r\n              id=\"qcu\"\r\n              name=\"questionType\"\r\n              value=\"QCU\"\r\n              onChange={handleTypeChange}\r\n            />\r\n            <label htmlFor=\"qcu\" data-label=\"QCU\"></label>\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Button variant=\"dark\" size=\"lg\" onClick={handleSubmit}>\r\n            {\" \"}\r\n            Enregistrer la question{\" \"}\r\n          </Button>\r\n        </div>\r\n        {/*<ReponseCreation id_question={} type_question={}/>*/}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <div>{id_question ? QuestionExiste() : QuestionNExistePas()}</div>;\r\n};\r\n\r\nexport default QuestionCrea;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}