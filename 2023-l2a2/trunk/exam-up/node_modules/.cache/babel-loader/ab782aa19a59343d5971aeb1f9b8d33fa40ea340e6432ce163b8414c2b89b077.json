{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanab\\\\OneDrive\\\\Bureau\\\\PROJECT\\\\2023-l2a2\\\\trunk\\\\exam-up\\\\src\\\\assests\\\\components\\\\EditReponse.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../Pages/style/ReponseCreation.css\";\nimport { Form, Table, Button } from \"react-bootstrap\";\nimport { Link, useParams } from \"react-router-dom\";\nimport ModalComponent from \"./ModalComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditReponse = () => {\n  _s();\n  const [rep, setRep] = useState(null); //1 seule option de rép\n\n  //renvoie le texte et vf d'une option de rép à partir de son id\n  const getReponse = async id_rep => {\n    try {\n      const response = await fetch(`http://localhost:3001//option_reponse/${id_rep}`);\n      const responseData = await response.json();\n      setRep(responseData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  //mettre à jour une option de réponse\n  const handleConfirm = async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/Mettre_a_jour_titre_reponse/${rep.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          texte: titre_O,\n          vf: valeur_O === \"true\"\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"erreur de mise à jour\");\n      }\n      console.log(\"réponse mise à jour avec succés\");\n      // Rafraîchir la liste des réponses après la modification\n      getReponses();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ModalComponent, {\n    modalTitle: \"Modifier option de r\\xE9ponse\",\n    buttonTitle: \"Modifier\",\n    buttonStyle: \"warning\",\n    closeText: \"Abandonner\",\n    confirmText: \"confirmer\",\n    handleConfirm: handleConfirm,\n    modalBody: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleConfirm,\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        className: \"form-control\",\n        value: titre_O || (rep ? rep.texte : \"\"),\n        onChange: e => setTitre_O(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        \"aria-label\": \"Default select example\",\n        onChange: handleSelectChange,\n        value: valeur_O || (rep ? rep.vf.toString() : \"false\"),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"true\",\n          children: \"Correcte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"false\",\n          children: \"Incorrecte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(EditReponse, \"7TJrUHh0x0mxPQyCeMaJ52H4BhY=\");\n_c = EditReponse;\nexport default EditReponse;\nvar _c;\n$RefreshReg$(_c, \"EditReponse\");","map":{"version":3,"names":["React","useEffect","useState","Form","Table","Button","Link","useParams","ModalComponent","jsxDEV","_jsxDEV","EditReponse","_s","rep","setRep","getReponse","id_rep","response","fetch","responseData","json","err","console","error","message","handleConfirm","id","method","headers","body","JSON","stringify","texte","titre_O","vf","valeur_O","ok","Error","log","getReponses","modalTitle","buttonTitle","buttonStyle","closeText","confirmText","modalBody","onSubmit","children","Control","type","className","value","onChange","e","setTitre_O","target","fileName","_jsxFileName","lineNumber","columnNumber","Select","handleSelectChange","toString","_c","$RefreshReg$"],"sources":["C:/Users/sanab/OneDrive/Bureau/PROJECT/2023-l2a2/trunk/exam-up/src/assests/components/EditReponse.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../Pages/style/ReponseCreation.css\";\r\nimport { Form, Table, Button } from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport ModalComponent from \"./ModalComponent\";\r\n\r\nconst EditReponse = () => {\r\n    const [rep, setRep] = useState(null); //1 seule option de rép\r\n\r\n    //renvoie le texte et vf d'une option de rép à partir de son id\r\n  const getReponse = async (id_rep) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:3001//option_reponse/${id_rep}`\r\n      );\r\n      const responseData = await response.json();\r\n      setRep(responseData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  //mettre à jour une option de réponse\r\n  const handleConfirm = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:3001/Mettre_a_jour_titre_reponse/${rep.id}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            texte: titre_O,\r\n            vf: valeur_O === \"true\",\r\n          }),\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"erreur de mise à jour\");\r\n      }\r\n      console.log(\"réponse mise à jour avec succés\");\r\n      // Rafraîchir la liste des réponses après la modification\r\n      getReponses();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  return (\r\n    <ModalComponent\r\n                    modalTitle=\"Modifier option de réponse\"\r\n                    buttonTitle=\"Modifier\"\r\n                    buttonStyle=\"warning\"\r\n                    closeText=\"Abandonner\"\r\n                    confirmText=\"confirmer\"\r\n                    handleConfirm={handleConfirm}\r\n                    modalBody={\r\n                      <Form onSubmit={handleConfirm}>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          value={titre_O || (rep ? rep.texte : \"\")}\r\n                          onChange={(e) => setTitre_O(e.target.value)}\r\n                        />\r\n\r\n                        <Form.Select\r\n                          aria-label=\"Default select example\"\r\n                          onChange={handleSelectChange}\r\n                          value={\r\n                            valeur_O || (rep ? rep.vf.toString() : \"false\")\r\n                          }\r\n                        >\r\n                          <option value=\"true\">Correcte</option>\r\n                          <option value=\"false\">Incorrecte</option>\r\n                        </Form.Select>\r\n                      </Form>\r\n                    }\r\n                  />\r\n  )\r\n}\r\n\r\nexport default EditReponse\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}